@{

    ViewData["Title"] = "مدیریت دسته بندی ها - پنل مدیریتی ایمن فروش";

    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<!-- item template -->
<script type="text/x-template" id="item-template">
  <li>
    <div
      :class="{bold: isFolder}">
      <span style="cursor: pointer;" v-on:click="toggle" v-if="isFolder">[{{open ? '-' : '+'}}]</span>
      {{model.text}}

      <span class="action">
        <a href="#" class="text-primary" v-on:click="edit(model)" style="margin-right:20px">ویرایش | </a>
        <a href="#" class="text-warning" v-on:click="add(model)">اضافه نمودن زیر دسته | </a>
        <a href="#" class="text-success">مدیریت متادیتاها | </a>
        <a href="#" class="text-danger">حذف</a>
      </span>

    </div>
    <ul v-show="open" v-if="isFolder">
      <item
        class="item"
        v-for="model in model.children"
        :model="model">
      </item>
    </ul>
  </li>
</script>


<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/admin">پنل مدیریتی</a></li>
        <li class="breadcrumb-item">مدیریت دسته بندی ها</li>
    </ol>
</nav>

<div class="panel panel-primary" id="app">
    <div class="panel-heading">مدیریت دسته بندی ها</div>
    <div class="panel-body">
        <div class="row">
            <div class="col-md-12 col-xs-12">
                <ul class="tree-admin">
                    <item class="item" :model="treeData">
                    </item>
                </ul>
            </div>            
        </div>
    </div>

    <!-- Modal -->
    <div id="editModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">&times;</button>
            <h4 class="modal-title">اضافه نمودن / ویرایش</h4>
        </div>
        <div class="modal-body">
            <div class="form-group">
                <label class="required">عنوان زیر دسته را وارد کنید </label>
                <input v-model="title" type="text" placeholder="عنوان زیر دسته" class="form-control">
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" v-on:click="save" class="btn btn-default">ثبت</button>
        </div>
        </div>
    </div>
    </div>
</div>

<script>

    var app = new Vue({
        el: '#app',
        data: {
            treeData: {},
            loading : true,
            title:'mahdi hassani',
            id : '',
            mode :''
        },
        methods : {
            loadTree : function () {
                var me = this;
                $.ajax({
                    url: '/Admin/CategoryManagement/Get',
                    success: function(result) {
                        let tree = {};
                        if(result[0]) {
                            tree = {
                                text : result[0].text,
                                id : result[0].id,
                                canInsert : result[0].canInsert,
                                children : result[0].children
                            }
                        }
                        me.treeData = tree;
                    }
                })
            },
            save : function() {
                if(this.title==='') {
                    return toastr.error('عنوان نمی تواند خالی باشد');
                }
                if(this.mode==='add') {
                    this.loadTree();
                }    
                $('#editModal').modal('hide');
                toastr.info('عملیات با موفقیت انجام شد ');
            }
        },
        created : function(){
           this.loadTree();
        }
    }) 

    Vue.component('item', {
        template: '#item-template',
        props: {
            model: Object
        },
        data: function () {
            return {
                open: false,             
            }
        },
        computed: {
            isFolder: function () {
                return this.model.children &&
                    this.model.children.length
            }
        },
        methods: {
            toggle: function () {
                if (this.isFolder) {
                    this.open = !this.open
                }
            },
            add : function(model) {                
                app.title = '';            
                app.id = '';
                app.mode='add';            
                $('#editModal').modal({
                    backdrop: 'static',
                    keyboard: false
                });
            },
            edit : function(model) {                
                app.title = model.text;            
                app.id = model.id;
                app.mode='edit';            
                $('#editModal').modal({
                    backdrop: 'static',
                    keyboard: false
                });
            }
        }
    }) 
</script>
